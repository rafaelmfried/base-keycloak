services:
  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_network
    restart: unless-stopped
    command: start-dev
  postgres:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=suitedb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d suitedb"]
      interval: 30s
      timeout: 10s
      retries: 3
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - keycloak_network
    restart: unless-stopped
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - keycloak_network
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - 8081:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - keycloak_network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
  schemaspy:
    image: schemaspy/schemaspy:latest
    volumes:
      - ./schemaspy/output:/output
      - ./schemaspy/config:/config
    networks:
      - keycloak_network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["-configFile", "/config/schemaspy.properties"]
    restart: "no"
volumes:
  keycloak_data:
    driver: local
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
networks:
  keycloak_network:
    driver: bridge
